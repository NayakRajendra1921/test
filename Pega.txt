BIT MANIPULATION
-----------------

1-  AND Operator (&)

a |  b | o/p
------------
0   0     0
0   1     0
1   0     0
1   1     1

# When you and any digit with 1 (num&1) it gives the same digit back .
-----------------------------------------------------------------------------------
2-   OR Operator (||)

a |  b | o/p
------------
0   0     0
0   1     1
1   0     1
1   1     1

------------------------------------------------------------------------------------
3- XOR or Exclusive Or (^) (if and only if)


a |  b | o/p                       observations
------------                       -------------
0   0     0                        a^0=a
0   1     1                        a^1=a'(complement of a)
1   0     1                        a^a=0
1   1     0

---------------------------------------------------------------------------------------

Left Shift Operator(a<<num)
---------------------------

1010 << 1 = 10100  (add additional 0 at the end)

# num<<1 = 2*num (basically doubles the number)
# Generally num << b = num*(2^b)

-------------------------------------------------------------------------------------------

Right Shift Operator (a>>num)
-----------------------------
1010 >> 1 =101 (basically removes the last element from the digit)

#num>>1 =num/2  (divides the number by 2)
# In general num>>b = num/(2^b)

---------------------------------------------------------------------------------------------

Q-1 find a number is even or odd ?

ans -> we will and that number with 1 if it is 1 then odd else it is even .

if((num&1)==1){
            System.out.println("odd");
        }else{
            System.out.println("even");
        }

------------------------------------------------------------------------------------------------

Q-2 find i th bit of a number ?

ans -> we have create a mask using left shift of 1 and and it with the given number to find the ith bit .

int num=9;
        int k=1;
        System.out.println(num&(1<<k-1));

if out put is anything other than 0 than it has 1 at that place or else it has 0 and answer comes out to be 0 .

------------------------------------------------------------------------------------------------------

Q-3  Set the ith bit of a number ?

ans -> to set the ith bit of a number will create a mask by right shifting the 1 and OR it with the number

                  101010001
               || 000100000
               --------------
                  101110001


----------------------------------------------------------------------------------------------------------

Q-4 reset the ith bit of a number ?

ans -> same as above but just replace OR operator by AND operator

------------------------------------------------------------------------------------------------------------

Q-5 find the right most set bit ?

ans -> to find the right most set bit of number take AND operation between that number and negatove of that
       number .
------------------------------------------------------------------------------------------------------------

Q-6 determine a number is power of 2 or not ?

ans -> to determine a number is power of 2 or not we just have to perform AND operation between that number 
       and it's precessor number , if the result comes out to 0 then it is power of 2 else it is not .
   
         if(num & (num-1)==0){
           System.out.println("Power pof 2");
                        }
             else {
           System.out.println("Not power of 2");}

------------------------------------------------------------------------------------------------------------
Q-7 determine the number of set bit of number ?

Q-8 Ex-OR from 0 to a(certain number) ?


ans -> some general values
          a%4=0    ans=a
          a%4=1    ans=1
          a%4=2    ans=a+1
          a%4=3    ans=0
------------------------------------------------------------------------------------------------------------

Q-9 power of a number?

ans ->   eg we have to find 3^6

      int base=3;
      int power=6;
      int ans=1;

      while(powe>0){
        if(power&1==1){
         ans=ans*base;
         }
         base*=3;
         power=power>>1;
         }

-------------------------------------------------------------------------------------------------------------


springboot
jpa/hibernates
junit and mockito
sql
microservices
git
sonarqube
logger



20-string , collections , multithreading , hibernate jpa
30-complete java , springboot , junit ,git , sonarqube
10-java interview prep , springboot and hibernate interview prep 
10-20 -> microservices
20-5->spring security , java script

 















